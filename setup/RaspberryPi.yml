- hosts: Raspberry
  become: yes
  tasks:
    - name: Ensure apt-transport-https is installed
      apt:
        name: apt-transport-https
        state: present

    - name: Create apt bookworm firmware fix
      copy:
        dest: /etc/apt/apt.conf.d/no-bookworm-firmware.conf
        content: APT::Get::Update::SourceListWarnings::NonFreeFirmware "false";

    - name: Add Debian bullseye Repository
      apt_repository:
        repo: deb http://deb.debian.org/debian/ bullseye main
        state: present

    - name: Add Debian bookworm Repository
      apt_repository:
        repo: deb http://deb.debian.org/debian/ bookworm main
        state: present

    - name: Add Debian sid Repository
      apt_repository:
        repo: deb http://deb.debian.org/debian/ sid main
        state: present

    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Autoremove unnecessary packages
      apt:
        autoremove: yes

    - name: Autoclean package files
      apt:
        autoclean: yes

    - name: Install essential packages
      apt:
        name: 
          - htop
          - git
          - wget
        state: present

    - name: Set Wait for network on boot
      shell: "raspi-config nonint do_boot_wait 0"

    - name: Set Boot behaviour
      shell: "raspi-config nonint do_boot_behaviour B1"

    - name: Change locale
      shell: "raspi-config nonint do_change_locale cs_CZ.UTF-8"

    - name: Change timezone
      shell: "raspi-config nonint do_change_timezone Europe/Prague"

    - name: Change keyboard layout
      shell: "raspi-config nonint do_configure_keyboard cz"

    - name: Enable network names
      shell: "raspi-config nonint do_net_names 0"

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Send message to Discord if a reboot is needed
      uri:
        url: "{{ lookup('env', 'DISCORD_WEBHOOK') }}"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body:
          content: "A reboot is required on {{ inventory_hostname }}"
        status_code: 204
      when: reboot_required_file.stat.exists